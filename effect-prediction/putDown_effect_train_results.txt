yochan@EN4102960:~/DL/effect-recognition$ THEANO_FLAGS='floatX=float32,device=gpu0,mode=FAST_RUN,nvcc.fastmath=True' python -m scripts.evaluate_ucf11
Using gpu device 0: Quadro K2100M (CNMeM is disabled, CuDNN 3007)
GPU Lock Acquired
BBBB
Anything printed here will end up in the output directory for job #0
{'decay_c': [1e-05], 'patience': [10], 'n_layers_init': [1], 'dim_out': [512], 'max_epochs': [20], 'dispFreq': [20], 'validFreq': [100], 'temperature_inverse': [1], 'reload': [False], 'n_layers_att': [1], 'fps': [60], 'ctx_dim': [1024], 'valid_batch_size': [256], 'n_actions': [7], 'training_stride': [1], 'optimizer': ['adam'], 'alpha_c': [0.0], 'dictionary': [None], 'learning_rate': [0.0001], 'batch_size': [77], 'selector': [False], 'last_n': [5], 'dataset': ['ucf11'], 'ctx2out': [False], 'dim': [512], 'use_dropout': [True], 'testing_stride': [1], 'n_layers_out': [1], 'maxlen': [4], 'model': ['/home/yochan/DL/effect-recognition/models/1/putDown_model.npz'], 'saveFreq': [200]}
Yantian, 1
-----
Booting up all data handlers
./util/datahander.py
##Dataset size 702
./util/datahander.py
##Dataset size 702
./util/datahander.py
##Dataset size 702
./util/datahander.py
##Dataset size 48
Data handlers ready
-----
Building model
break1
Optimization
Epoch  0
Yantian, num_train_batches 10
Yantian, uidx 1
Yantian, uidx 2
Yantian, uidx 3
Yantian, uidx 4
Yantian, uidx 5
Yantian, uidx 6
Yantian, uidx 7
Yantian, uidx 8
Yantian, uidx 9
Yantian, uidx 10
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.262295081967 Valid 0.262295081967 Test 0.25
Epoch  1
Yantian, num_train_batches 10
Yantian, uidx 11
Yantian, uidx 12
Yantian, uidx 13
Yantian, uidx 14
Yantian, uidx 15
Yantian, uidx 16
Yantian, uidx 17
Yantian, uidx 18
Yantian, uidx 19
Yantian, uidx 20
Epoch  1 Update  20 Cost  50.7475509644 PD  1.37962317467 UD  0.494866132736
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.409836065574 Valid 0.409836065574 Test 0.0
Epoch  2
Yantian, num_train_batches 10
Yantian, uidx 21
Yantian, uidx 22
Yantian, uidx 23
Yantian, uidx 24
Yantian, uidx 25
Yantian, uidx 26
Yantian, uidx 27
Yantian, uidx 28
Yantian, uidx 29
Yantian, uidx 30
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.639344262295 Valid 0.639344262295 Test 0.5
Epoch  3
Yantian, num_train_batches 10
Yantian, uidx 31
Yantian, uidx 32
Yantian, uidx 33
Yantian, uidx 34
Yantian, uidx 35
Yantian, uidx 36
Yantian, uidx 37
Yantian, uidx 38
Yantian, uidx 39
Yantian, uidx 40
Epoch  3 Update  40 Cost  34.4065093994 PD  1.37602901459 UD  0.495775938034
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.672131147541 Valid 0.672131147541 Test 0.5
Epoch  4
Yantian, num_train_batches 10
Yantian, uidx 41
Yantian, uidx 42
Yantian, uidx 43
Yantian, uidx 44
Yantian, uidx 45
Yantian, uidx 46
Yantian, uidx 47
Yantian, uidx 48
Yantian, uidx 49
Yantian, uidx 50
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.770491803279 Valid 0.770491803279 Test 0.625
Epoch  5
Yantian, num_train_batches 10
Yantian, uidx 51
Yantian, uidx 52
Yantian, uidx 53
Yantian, uidx 54
Yantian, uidx 55
Yantian, uidx 56
Yantian, uidx 57
Yantian, uidx 58
Yantian, uidx 59
Yantian, uidx 60
Epoch  5 Update  60 Cost  17.3395862579 PD  1.3765900135 UD  0.498034954071
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.868852459016 Valid 0.868852459016 Test 0.625
Epoch  6
Yantian, num_train_batches 10
Yantian, uidx 61
Yantian, uidx 62
Yantian, uidx 63
Yantian, uidx 64
Yantian, uidx 65
Yantian, uidx 66
Yantian, uidx 67
Yantian, uidx 68
Yantian, uidx 69
Yantian, uidx 70
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.901639344262 Valid 0.901639344262 Test 0.5
Epoch  7
Yantian, num_train_batches 10
Yantian, uidx 71
Yantian, uidx 72
Yantian, uidx 73
Yantian, uidx 74
Yantian, uidx 75
Yantian, uidx 76
Yantian, uidx 77
Yantian, uidx 78
Yantian, uidx 79
Yantian, uidx 80
Epoch  7 Update  80 Cost  31.2671375275 PD  1.34957790375 UD  0.496208906174
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.868852459016 Valid 0.868852459016 Test 0.75
Epoch  8
Yantian, num_train_batches 10
Yantian, uidx 81
Yantian, uidx 82
Yantian, uidx 83
Yantian, uidx 84
Yantian, uidx 85
Yantian, uidx 86
Yantian, uidx 87
Yantian, uidx 88
Yantian, uidx 89
Yantian, uidx 90
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.967213114754 Valid 0.967213114754 Test 0.5
Epoch  9
Yantian, num_train_batches 10
Yantian, uidx 91
Yantian, uidx 92
Yantian, uidx 93
Yantian, uidx 94
Yantian, uidx 95
Yantian, uidx 96
Yantian, uidx 97
Yantian, uidx 98
Yantian, uidx 99
Yantian, uidx 100
Epoch  9 Update  100 Cost  13.2555713654 PD  1.36125707626 UD  0.49378490448
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.975409836066 Valid 0.975409836066 Test 0.625
Epoch  10
Yantian, num_train_batches 10
Yantian, uidx 101
Yantian, uidx 102
Yantian, uidx 103
Yantian, uidx 104
Yantian, uidx 105
Yantian, uidx 106
Yantian, uidx 107
Yantian, uidx 108
Yantian, uidx 109
Yantian, uidx 110
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.983606557377 Valid 0.983606557377 Test 0.625
Epoch  11
Yantian, num_train_batches 10
Yantian, uidx 111
Yantian, uidx 112
Yantian, uidx 113
Yantian, uidx 114
Yantian, uidx 115
Yantian, uidx 116
Yantian, uidx 117
Yantian, uidx 118
Yantian, uidx 119
Yantian, uidx 120
Epoch  11 Update  120 Cost  13.0977592468 PD  1.36209511757 UD  0.494657039642
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.991803278689 Valid 0.991803278689 Test 0.5
Epoch  12
Yantian, num_train_batches 10
Yantian, uidx 121
Yantian, uidx 122
Yantian, uidx 123
Yantian, uidx 124
Yantian, uidx 125
Yantian, uidx 126
Yantian, uidx 127
Yantian, uidx 128
Yantian, uidx 129
Yantian, uidx 130
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.983606557377 Valid 0.983606557377 Test 0.625
Epoch  13
Yantian, num_train_batches 10
Yantian, uidx 131
Yantian, uidx 132
Yantian, uidx 133
Yantian, uidx 134
Yantian, uidx 135
Yantian, uidx 136
Yantian, uidx 137
Yantian, uidx 138
Yantian, uidx 139
Yantian, uidx 140
Epoch  13 Update  140 Cost  16.232919693 PD  1.36489200592 UD  0.495595932007
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.991803278689 Valid 0.991803278689 Test 0.625
Epoch  14
Yantian, num_train_batches 10
Yantian, uidx 141
Yantian, uidx 142
Yantian, uidx 143
Yantian, uidx 144
Yantian, uidx 145
Yantian, uidx 146
Yantian, uidx 147
Yantian, uidx 148
Yantian, uidx 149
Yantian, uidx 150
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.991803278689 Valid 0.991803278689 Test 0.5
Epoch  15
Yantian, num_train_batches 10
Yantian, uidx 151
Yantian, uidx 152
Yantian, uidx 153
Yantian, uidx 154
Yantian, uidx 155
Yantian, uidx 156
Yantian, uidx 157
Yantian, uidx 158
Yantian, uidx 159
Yantian, uidx 160
Epoch  15 Update  160 Cost  4.33852148056 PD  1.36092615128 UD  0.497215032578
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.983606557377 Valid 0.983606557377 Test 0.625
Epoch  16
Yantian, num_train_batches 10
Yantian, uidx 161
Yantian, uidx 162
Yantian, uidx 163
Yantian, uidx 164
Yantian, uidx 165
Yantian, uidx 166
Yantian, uidx 167
Yantian, uidx 168
Yantian, uidx 169
Yantian, uidx 170
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.991803278689 Valid 0.991803278689 Test 0.5
Epoch  17
Yantian, num_train_batches 10
Yantian, uidx 171
Yantian, uidx 172
Yantian, uidx 173
Yantian, uidx 174
Yantian, uidx 175
Yantian, uidx 176
Yantian, uidx 177
Yantian, uidx 178
Yantian, uidx 179
Yantian, uidx 180
Epoch  17 Update  180 Cost  4.15325164795 PD  1.35890507698 UD  0.494479179382
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.991803278689 Valid 0.991803278689 Test 0.625
Epoch  18
Yantian, num_train_batches 10
Yantian, uidx 181
Yantian, uidx 182
Yantian, uidx 183
Yantian, uidx 184
Yantian, uidx 185
Yantian, uidx 186
Yantian, uidx 187
Yantian, uidx 188
Yantian, uidx 189
Yantian, uidx 190
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.991803278689 Valid 0.991803278689 Test 0.75
Epoch  19
Yantian, num_train_batches 10
Yantian, uidx 191
Yantian, uidx 192
Yantian, uidx 193
Yantian, uidx 194
Yantian, uidx 195
Yantian, uidx 196
Yantian, uidx 197
Yantian, uidx 198
Yantian, uidx 199
Yantian, uidx 200
Epoch  19 Update  200 Cost  2.03665137291 PD  1.3435280323 UD  0.501852989197
Saving... Done
Seen 702 training examples
Computing predictions (This will take a while. Set the verbose flag if you want to see the progress)
f_preds <theano.compile.function_module.Function object at 0x7f9cfc78f990>
Accuracy: Train 0.991803278689 Valid 0.991803278689 Test 0.625
Computing FINAL predictions (This will take a while. Set the verbose flag if you want to see the progress)
Final Accuracy: Train 0.262295081967 Valid 0.262295081967 Test 0.25
{'dataset': 'ucf11', 'optimizer': 'adam', 'alpha_c': 0.0, 'dictionary': None, 'batch_size': 77, 'decay_c': 1e-05, 'patience': 10, 'n_layers_init': 1, 'lrate': 0.0001, 'dim_out': 512, 'max_epochs': 20, 'dispFreq': 20, 'selector': False, 'ctx2out': False, 'n_actions': 7, 'temperature_inverse': 1, 'dim': 512, 'use_dropout': True, 'testing_stride': 1, 'n_layers_out': 1, 'n_layers_att': 1, 'maxlen': 4, 'saveto': '/home/yochan/DL/effect-recognition/models/1/putDown_model.npz', 'saveFreq': 200, 'fps': 60, 'ctx_dim': 1024, 'valid_batch_size': 256, 'reload_': False, 'training_stride': 1, 'validFreq': 100, 'last_n': 5}
AAAA
GPU freed

